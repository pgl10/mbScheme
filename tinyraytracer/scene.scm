
(define WIDTH 256)
(define HEIGHT 256)
(define NSUBSAMPLES 2)
(define NAO-SAMPLES 2)

;;; objects

(define spheres (make-vector 3))
(define plane #f)

(define (init-scene)
  (vector-set! spheres 0 (make-sphere (vec -2.0 0.0 -3.5) 0.5))
  (vector-set! spheres 1 (make-sphere (vec -0.5 0.0 -3.0) 0.5))
  (vector-set! spheres 2 (make-sphere (vec 1.0 0.0 -2.2) 0.5))
  (set! plane (make-plane (vec 0.0 -0.5 0.0) (vec 0.0 1.0 0.0))))

(define (save-ppm filename w h img)
  (define myfile (open filename))
  (define (this x y)
    (fdisplay myfile (vector-ref img (+ (* 3 (+ (* y w) x)) 0)))
    (fdisplay myfile " ")
    (fdisplay myfile (vector-ref img (+ (* 3 (+ (* y w) x)) 1)))
    (fdisplay myfile " ")
    (fdisplay myfile (vector-ref img (+ (* 3 (+ (* y w) x)) 2)))
    (new-line myfile)
  )
  (define (line x y)
    (if (< x w) (begin (this x y) (line (+ x 1) y)))
  )
  (define (all x y)
    (if (< y h) (begin (line 0 y) (all 0 (+ y 1))))
  )
  (fdisplay myfile "P3")
  (new-line myfile)
  (fdisplay myfile w) 
  (fdisplay myfile " ") 
  (fdisplay myfile h) 
  (new-line myfile)
  (fdisplay myfile "255")
  (new-line myfile)
  (all 0 0)
)

(define (run)
  (init-scene)
  (let ((img (render WIDTH HEIGHT NSUBSAMPLES)))
  (save-ppm "ao.ppm" WIDTH HEIGHT img))
)
